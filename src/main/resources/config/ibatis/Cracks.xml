<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<typeAlias alias="cracks" type="com.cracks.Cracks" />
	<sql id="cracks.columns">
		id,tunnelId,tunnelSectionId,liningRingConstructionId,blockIndex,number,type,
		length,width,depth,angle,dip,date,serious,des,creationDate,modifyDate
	</sql>
	<select id="cracks.queryByIds" resultClass="cracks" parameterClass="list">
		select <include refid="cracks.columns" /> <![CDATA[ from cracks
		where id in ]]>
			<iterate open="(" close=")" conjunction=",">
			   #[]#
		 	 </iterate>
	</select>
	<select id="cracks.querySizeByTunnelAndSection" resultClass="int">
		select count(*) from cracks
		<dynamic prepend="WHERE">
            <isGreaterThan prepend="AND" property="tunnelId" compareValue="0">
                 tunnelId=#tunnelId#
            </isGreaterThan>
            <isGreaterThan prepend="AND" property="tunnelSectionId" compareValue="0">
                 tunnelSectionId=#tunnelSectionId#
            </isGreaterThan>
            <isGreaterThan prepend="AND" property="liningRingConstructionId" compareValue="0">
                 liningRingConstructionId=#liningRingConstructionId#
            </isGreaterThan>
   		</dynamic>
	</select>
	<select id="cracks.queryLimitedCrackss" resultClass="cracks">
		select
		<include refid="cracks.columns" />
		from cracks
		<dynamic prepend="WHERE">
            <isGreaterThan prepend="AND" property="tunnelId" compareValue="0">
                 tunnelId=#tunnelId#
            </isGreaterThan>
            <isGreaterThan prepend="AND" property="tunnelSectionId" compareValue="0">
                 tunnelSectionId=#tunnelSectionId#
            </isGreaterThan>
            <isGreaterThan prepend="AND" property="liningRingConstructionId" compareValue="0">
                 liningRingConstructionId=#liningRingConstructionId#
            </isGreaterThan>
   		</dynamic>
   		order by date desc
		limit #start#,#size#
	</select>
	<select id="cracks.queryCracksByDuration" resultClass="cracks">
		select
		<include refid="cracks.columns" />
		from cracks
		where liningRingConstructionId=#liningRingConstructionId#
		 <![CDATA[and date>=#start# and date<=#end# ]]>
		order by date asc
	</select>
	<select id="cracks.findByName" resultClass="cracks" parameterClass="String">
		select
		<include refid="cracks.columns" />
		from cracks where name=#name#
	</select>
	<select id="cracks.findById" resultClass="cracks" parameterClass="int">
		select
		<include refid="cracks.columns" />
		from cracks where id=#id#
	</select>
	<insert id="cracks.insert" parameterClass="cracks">
		insert into cracks (<include refid="cracks.columns" />) values
		(#id#,#tunnelId#,#tunnelSectionId#,#liningRingConstructionId#,#blockIndex#,
		#number#,#type#,#length#,#width#,#depth#,#angle#,#dip#,#date#,#serious#,#des#,now(),now())
		<selectKey resultClass="int" keyProperty="id">
             <![CDATA[   select last_insert_id() as id  ]]>
		</selectKey>
	</insert>
	<update id="cracks.update" parameterClass="cracks">
		update cracks set
		tunnelId=#tunnelId#,tunnelSectionId=#tunnelSectionId#,liningRingConstructionId=#liningRingConstructionId#,
		blockIndex=#blockIndex#,number=#number#,type=#type#,length=#length#,width=#width#,depth=#depth#,serious=#serious#,
		angle=#angle#,dip=#dip#,date=#date#,des=#des#,modifyDate=now() where id=#id#
	</update>
	<delete id="cracks.delete" parameterClass="int">
		delete from cracks
		where
		id=#id#
	</delete>
</sqlMap>
